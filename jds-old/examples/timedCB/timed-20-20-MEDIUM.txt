FinalTime = 60000
NumberOfAgents = 20
MaximumDeviation = 4
Mode = clock
Debug = false
FormattedReport = false

clock = br.ufba.lasid.jds.prototyping.hddss.Clock_Virtual
clock.Mode = s

cpu = br.ufba.lasid.jds.prototyping.hddss.LoadAwareCPU
/* transferRate in  bps  (e.g. 9Gbps is equal to 9000000000 bps, if simulation time in miliseconds then use 9Gbps / 1000  = 9Mb/ms */
/*  ProcessingRate = 9446400 ~ i7 3.3GHz | 64 bits/instruction | PW = 147,6 MIPS */
cpu.ProcessingRate = 9446400 
/* LoadCost in seconds (e.g. 0.000000000001 seconds is equal to 1 picosecond) if simulation time in millisenconds then use 0.000000001 ms*/
cpu.LoadCost = 0.000000001

agent = br.ufba.lasid.jds.prototyping.hddss.Agent_TimedCB
agent.DeltaMax = 100
agent.DeltaMin = 1
agent.TimeSilence = 20
agent.PacketGenerationProb = 0.10
agent.MinProb = 0.05
agent.MaxProb = 0.15
agent.StableMode = 1
agent.PayloadSize = 256

channel = br.ufba.lasid.jds.prototyping.hddss.ChannelLogNormal
channel.Mean = 10
channel.MinDelay = 1
channel.Std = 5

// network = br.ufba.lasid.jds.prototyping.hddss.PayloadAwareNetwork
network = br.ufba.lasid.jds.prototyping.hddss.NetworkDeterministic
network.ProcessingTime = .001


/* transferRate in  bps  (e.g. 10Mbps is equal to 10000000 bps, if simulation time in miliseconds then use 10Mbps / 1000  = 10Kb/ms*/
//network.TransferRate =  10000000

/* MTU = bits (e.g. 64 KB is equal to 524288 bits) */
//network.MTU = 524288

/* SegmentationCost in seconds (e.g. 0.000000001 seconds is equal to 1 nanosecond) if simulation time in millisenconds then use 0.000001 ms*/
//network.SegmentationCost = 0.000001
/* FIFO = false, the network doesn't guarantee fifo order in message trip from agent to network router and from network router to agent (connectionless service simulation)
    FIFO = true,  the network guarantee fifo order in message trip from agent to network router and from network router to agent (connection-oriented service simulation) */
network.FIFO = true

/* determine the distribution of channel delay before and after network router, this is: TripBalance = 0.1 means 10% of end-to-end delays is assign to trip from agent to network router and 90% of end-to-end delay is 
    assign to trip from network to agent */
network.TripBalance = 0.5

/***********************************************************/
 * JDS FRAMEWORK OPTIONS
 ***********************************************************/

JDS.MaximumPageSize = "MaximumPageSize";
JDS.PageOffset	= "PageOffset";
JDS.PageIndex	= "PageIndex";
JDS.PageBytes	= "PageBytes";
JDS.PageProvider	= "PageProvider";
JDS.VolatileMemoryProvider = "VolatileMemoryProvider";
JDS.PersistentMemoryProvider = "PersistentMemoryProvider";
JDS.Filename = "Filename";
JDS.FileAccessMode = "FileAccessMode";
JDS.MaximumCacheSize = "MaximumCacheSize";
JDS.CacheProvider = "CacheProvider";
JDS.CachePolicyProvider = "CachePolicyProvider";
JDS.VolatileMemoryFactory = "VolatileMemoryFactoryName";
JDS.PersistentMemoryFactory = "PersistentMemoryFactoryName";
JDS.CacheFactory = "CacheFactoryName";
JDS.PageFactory = "PageFactoryName";
JDS.VolatileStateProvider = "VolatileStateProvider";
JDS.VolatileStateFactory = "VolatileStateFactory";
JDS.PersistentStateProvider = "PersistentStateProvider";
JDS.PersistentStateFactory = "PersistentStateFactory";
JDS.PersistentStorageID = "PersistentStorageID";
JDS.StampSize = "StampSize";
JDS.BTreeStructureOrder = "BTreeStructureOrder";
JDS.BTreeStructureMaximumDepth = "BTreeStructureMaximumDepth";